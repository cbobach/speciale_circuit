#define card_size 6
#define num_cards 52
#define num_out_cards 20

typedef uint_t 1 bit
typedef uint_t 9 uint9
typedef uint_t 120 SEED
typedef uint_t 6 CARD
typedef uint_t 312 DECK

#parties 2

#input 1 SEED
#output 1 DECK
#input 2 SEED
#output 2 DECK

#include "corrected_seed.wir"
#include "init_deck.wir"

function DECK shuffleDeck(DECK deck, SEED seed) {
    uint9 pos_i;
    uint9 pos_j;
    uint9 s;
    CARD card;
    bit b;

    for (uint9 i = 0; i < num_out_cards; ++i) {
        pos_i = i * card_size;
        s{0:card_size} = seed{pos_i:card_size};

        card = deck{pos_i:card_size};

        for(uint9 j = i; j < num_cards; ++j) {
            pos_j = j * card_size;

            b = j == (s + i);
            if(b) {
                deck{pos_i:card_size} = deck{pos_j:card_size};
                deck{pos_j:card_size} = card;
            }
        }
    }

    return deck;
}

function void main() {
    SEED seed;
    seed = correctSeeds(input1, input2);

    DECK deck;
    deck = initDeck(deck);

    output1 = shuffleDeck(deck, seed);
}